<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.xiudoua.study</groupId>
		<artifactId>micro</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.xiudoua.study</groupId>
	<artifactId>micro-security-zuul</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>micro-security-zuul Maven Webapp</name>
	<url>http://maven.apache.org</url>
	
	<!-- JustFresh 2018-04-04 Begin 声明项目配置文件编码格式 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>
	<!-- JustFresh 2018-04-04 End 声明项目配置文件编码格式 -->
	
	<dependencies>
	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- JustFresh 2018-04-04 Begin SpringBoot项目基础引用 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- JustFresh 2018-04-04 End SpringBoot项目基础引用 -->
		
		<!-- JustFresh 2018-04-04 Begin Eureka客户端服务所需引用 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.aspectj</groupId>
					<artifactId>aspectjweaver</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- JustFresh 2018-04-04 End Eureka客户端服务所需引用 -->
		
		<!-- JustFresh 2018-04-02 Begin 去除SpringBoot自带aspectjweaver并引入自定义aspectjweaver1.8.7（由于自带jar冲突） -->
		<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjweaver</artifactId>
		    <version>1.8.7</version>
		</dependency>
		<!-- JustFresh 2018-04-02 End 去除SpringBoot自带aspectjweaver并引入自定义aspectjweaver1.8.7（由于自带jar冲突） -->
		
		<!-- JustFresh 2018-04-07 Begin 引入网关依赖 -->
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zuul</artifactId>
        </dependency>
        <dependency>
            <groupId>com.marcosbarbero.cloud</groupId>
            <artifactId>spring-cloud-zuul-ratelimit</artifactId>
            <version>1.0.7.RELEASE</version>
        </dependency>
		<!-- JustFresh 2018-04-07 End 引入网关依赖 -->
		
		<!-- JustFresh 2018-04-08 Begin 引入zipkin依赖 -->
		<dependency>
		  	<groupId>org.springframework.cloud</groupId>
		  	<artifactId>spring-cloud-sleuth-zipkin</artifactId>
		</dependency>
        <!-- JustFresh 2018-04-08 End 引入zipkin依赖 -->
        
        <!-- JustFresh 2018-04-03 Begin 引入SpringBoot微服务健康监控组件jar -->
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- JustFresh 2018-04-03 End 引入SpringBoot微服务健康监控组件jar -->
		
		<!-- JustFresh 2018-04-03 Begin 引入需要和JMX-Beans（对系统资源进行管理的规范API）交互的Jolokia包 -->
		<dependency>
            <groupId>org.jolokia</groupId>
    		<artifactId>jolokia-core</artifactId>
	    </dependency>
		<!-- JustFresh 2018-04-03 End 引入需要和JMX-Beans（对系统资源进行管理的规范API）交互的Jolokia包 -->
		
		<!-- JustFresh 2018-04-03 Begin 引入数据库操作JPA -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
		    	<exclusion>
		    		<groupId>org.hibernate.common</groupId>
		    		<artifactId>
		    			hibernate-commons-annotations
		    		</artifactId>
		    	</exclusion>
		    </exclusions>
        </dependency>
		<!-- JustFresh 2018-04-03 End 引入数据库操作JPA -->
		
		<!-- JustFresh 2018-04-03 Begin 引入SpringBootSecurity -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity4</artifactId>
        </dependency>
        <!-- JustFresh 2018-04-03 End 引入SpringBootSecurity -->
        <!-- JustFresh 2018-04-03 Begin 引入thymeleaf模板引擎 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- JustFresh 2018-04-03 End 引入thymeleaf模板引擎 -->
		
		<!-- JustFresh 2018-04-03 Begin 引入Mysql连接包 -->
		<dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
		<!-- JustFresh 2018-04-03 End 引入Mysql连接包 -->
		
		<!-- JustFresh 2018-04-03 Begin 引入缺失的jta包 -->
		<dependency>
		    <groupId>javax.transaction</groupId>
		    <artifactId>jta</artifactId>
		    <version>1.1</version>
		</dependency>
		<!-- JustFresh 2018-04-03 Begin 引入缺失的jta包 -->
		
		<!-- JustFresh 2018-03-30 Begin 由于原jpa直接引入的包有冲突，故更换为4.0.5 -->
		<dependency>
		    <groupId>org.hibernate.common</groupId>
		    <artifactId>hibernate-commons-annotations</artifactId>
		    <version>4.0.5.Final</version>
		</dependency>
		<!-- JustFresh 2018-03-30 End 由于原jpa直接引入的包有冲突，故更换为4.0.5 -->
		
		<!-- JustFresh 2018-04-04 Begin 引入打包发布（jar包或war包）所需sevlet支持 -->
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <scope>provided</scope>
		</dependency>
		<!-- JustFresh 2018-04-04 End 引入打包发布（jar包或war包）所需sevlet支持 -->
		
	</dependencies>
	
	<!-- JustFresh 2018-04-04 Begin 声明SpringCloud 引用版本 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Camden.SR5</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<!-- JustFresh 2018-04-04 End 声明SpringCloud 引用版本 -->
	

	<build>
		<finalName>micro-security-zuul</finalName>
		<plugins>
			<!-- JustFresh 2018-04-04 Begin Spring Boot Maven plugin能够将Spring Boot应用打包为可执行的jar或war文件，然后以通常的方式运行Spring Boot应用 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- JustFresh 2018-04-04 Begin 解决中文乱码问题 -->
			        <jvmArguments>-Dfile.encoding=UTF-8</jvmArguments>  
			        <!-- JustFresh 2018-04-04 End 解决中文乱码问题 -->
			    </configuration>
			</plugin>
			<!-- JustFresh 2018-04-04 End Spring Boot Maven plugin能够将Spring Boot应用打包为可执行的jar或war文件，然后以通常的方式运行Spring Boot应用 -->
	   </plugins>
	</build>
</project>
